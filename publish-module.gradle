apply plugin: 'maven-publish'

def libraryGroupId = ConfigData.groupName
def libraryArtifactId = ConfigData.artifactId
def libraryVersion = generateVersion(ConfigData.versionName)

static boolean isReleaseBranch() {
    def branchName = "$System.env.BRANCH_NAME"
    def isReleaseBranch = "master" == branchName
    return isReleaseBranch
}

static String generateVersion(String versionName) {
    def branchName = "$System.env.BRANCH_NAME"
    def isDevelopBranch = "develop" == branchName
    if (isReleaseBranch()) {
        println("logger: branch $versionName")
        return versionName
    }
    if (isDevelopBranch) {
        println("logger: branch $versionName-SNAPSHOT")
        return "$versionName-SNAPSHOT"
    }
    println("logger: branch $versionName-$branchName-SNAPSHOT")
    return "$versionName-$branchName-SNAPSHOT"
}

static def releaseRepositoryUrl() {
    return "http://localhost:8081/repository/maven-releases/"
}

static def getRepositoryUsername() {
    return "admin"
}

static def getRepositoryPassword() {
    return "omega"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

project(':followers') {
    publish.dependsOn('build')
    publishing {
        publications {
            release(MavenPublication) {
                // Set the published library info
                groupId libraryGroupId
                artifactId libraryArtifactId
                version libraryVersion

                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            }
        }
        repositories {
            maven {
                url = uri(releaseRepositoryUrl())
                setAllowInsecureProtocol(true)
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
                def releasesRepoUrl = 'http://localhost:8081/repository/maven-releases/'
                def snapshotsRepoUrl = 'http://localhost:8081/repository/maven-snapshots/'
                url = libraryVersion.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}